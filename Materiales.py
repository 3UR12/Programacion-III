# Clase base para todos los materiales de la biblioteca
class MaterialBiblioteca:   
    def __init__(self, titulo, autor, a√±o_publicacion): # Constructor de la clase MaterialBiblioteca o tambien llamados atributos de la clase
        self.titulo = titulo # T√≠tulo del material y atributo de la clase
        self.autor = autor  # Autor del material y atributo de la clase
        self.a√±o_publicacion = a√±o_publicacion # A√±o de publicaci√≥n del material

    def mostrar_informacion(self):  # M√©todo para mostrar informaci√≥n del material
        print(f"T√≠tulo: {self.titulo}") #aqui se muestra el titulo del material
        print(f"Autor: {self.autor}")
        print(f"A√±o de publicaci√≥n: {self.a√±o_publicacion}")

class Libro(MaterialBiblioteca):    # Subclase que representa un Libro
    def __init__(self, titulo, autor, a√±o_publicacion, numero_paginas): # Constructor de la clase Libro
        super().__init__(titulo, autor, a√±o_publicacion)    # Llama al constructor de la clase padre
        self.numero_paginas = numero_paginas        # N√∫mero de p√°ginas del libro y atributo de la clase
        self.tipo = "Libro"     
        # Inicializa el tipo de material como "Libro"
    
    def mostrar_informacion(self):# Sobrescribe el m√©todo para mostrar informaci√≥n espec√≠fica del libro
        print(f"üìò Tipo: {self.tipo}") #aqui se muestra el tipo de material
        print(f"T√≠tulo: {self.titulo}") #aqui se muestra el titulo del libro
        print(f"Autor: {self.autor}")   #aqui se muestra el autor del libro
        print(f"A√±o de publicaci√≥n: {self.a√±o_publicacion}")    #aqui se muestra el a√±o de publicacion del libro
        print(f"N√∫mero de p√°ginas: {self.numero_paginas}")  #aqui se muestra el numero de paginas del libro

class Revista(MaterialBiblioteca):  # Subclase que representa una Revista
    def __init__(self, titulo, autor, a√±o_publicacion, numero_edicion): # Constructor de la clase Revista
        super().__init__(titulo, autor, a√±o_publicacion)    # Llama al constructor de la clase padre
        self.numero_edicion = numero_edicion    # N√∫mero de edici√≥n de la revista y atributo de la clase
        self.tipo = "Revista"   # Inicializa el tipo de material como "Revista"

    def mostrar_informacion(self):  # Sobrescribe el m√©todo para mostrar informaci√≥n espec√≠fica de la revista
        #aqui se muestra el tipo de material
        print(f"üóûÔ∏è Tipo: {self.tipo}")     
        print(f"T√≠tulo: {self.titulo}")
        print(f"Autor: {self.autor}")
        print(f"A√±o de publicaci√≥n: {self.a√±o_publicacion}")
        print(f"N√∫mero de edici√≥n: {self.numero_edicion}")

class DVD(MaterialBiblioteca):  # Subclase que representa un DVD
    def __init__(self, titulo, autor, a√±o_publicacion, duracion):
        super().__init__(titulo, autor, a√±o_publicacion)
        self.duracion = duracion
        self.tipo = "DVD"

    def mostrar_informacion(self):  # Sobrescribe el m√©todo para mostrar informaci√≥n espec√≠fica del DVD
        print(f"üíø Tipo: {self.tipo}")
        print(f"T√≠tulo: {self.titulo}")
        print(f"Autor: {self.autor}")
        print(f"A√±o de publicaci√≥n: {self.a√±o_publicacion}")
        print(f"Duraci√≥n (minutos): {self.duracion}")
